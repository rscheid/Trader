name: Deploy to Vultr

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key and config for Vultr access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VULT_SERVER_PRIV }}" > ~/.ssh/github_rsa
          chmod 600 ~/.ssh/github_rsa
          # Sicherstellen, dass github.com in known_hosts ist
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          # Optional: SSH-Konfiguration setzen, um github_rsa explizit für github.com zu verwenden
          echo "Host github.com" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/github_rsa" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Copy files to Vultr server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VULTR_SERVER_IP }}
          username: ${{ secrets.VULTR_SSH_USER }}
          key: ${{ secrets.VULT_SERVER_PRIV }}
          source: "/home/runner/work/Trader/Trader"
          target: "/root/home/trading-server-binance"

      - name: Deploy on Vultr server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.VULTR_SERVER_IP }}
          username: ${{ secrets.VULTR_SSH_USER }}
          key: ${{ secrets.VULT_SERVER_PRIV }}
          port: 22
          script: |
            echo "Testing SSH Connection"
            cd /root/home/trading-server-binance

            # Docker-Container stoppen und entfernen, falls er bereits läuft
            docker stop trading_bot_container || true
            docker rm trading_bot_container || true

            # Docker-Image bauen und Container starten
            docker build -t trading-bot-image .
            docker run -d --name trading_bot_container -p 3000:3000 trading-bot-image
